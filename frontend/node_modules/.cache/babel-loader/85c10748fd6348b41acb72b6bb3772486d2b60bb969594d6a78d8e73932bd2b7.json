{"ast":null,"code":"// import { createContext, useState } from 'react'\n// import { useNavigate } from 'react-router-dom';\n\n// const AuthContext = createContext()\n// export default AuthContext\n\n// export const AuthProvider = ({ children }) => {\n//     const [username, setusername] = useState('')\n//     const [password, setpassword] = useState('')\n//     let [authTokens, setAuthTokens] = useState(null)\n//     let [userauth, setuserauth] = useState(false)\n//     const navigate = useNavigate()\n\n//     const useronchange = (e) => {\n//         setusername(e.target.value)\n//     }\n\n//     const passwordonchange = (e) => {\n//         setpassword(e.target.value)\n//     }\n\n//     const loginuser = async (e) => {\n//         e.preventDefault()\n//         let response = await fetch('http://127.0.0.1:8000/login/', {\n//             method: \"POST\",\n//             headers: {\n//                 \"Content-Type\": \"application/json\"\n//             },\n\n//             body: JSON.stringify({ username: username, password: password })\n//         })\n//         let data = (await response.json())\n//         if (response.status === 200) {\n//             setAuthTokens(data)\n//             setuserauth(true)\n//             navigate('/')\n//         }\n//         else {\n//             alert('something went wrong!')\n//         }\n//     }\n\n//     let signinuser = async () =>{\n//         const response = await fetch ('http://127.0.0.1:8000/signup/',{\n//             method: \"POST\",\n//             headers: {\n//                 \"Content-Type\": \"application/json\"\n//             },\n\n//             body: JSON.stringify({ username: username, password: password })\n//         })\n//         let data = await response.json()\n//     }\n\n//     let logoutuser = () =>{\n//         setAuthTokens(null)\n//         setuserauth(false)\n//     }\n\n//     let contextData={\n//         username:username,\n//         password:password,\n//         setusername:setusername,\n//         setpassword:setpassword,\n//         useronchange:useronchange,\n//         passwordonchange:passwordonchange,\n//         authTokens:authTokens,\n//         userauth:userauth,\n\n//         loginuser:loginuser,\n//         signinuser:signinuser,\n//         logoutuser:logoutuser\n\n//     }\n\n//     return (\n//         <AuthContext.Provider value={contextData} >\n//             {children}\n//         </AuthContext.Provider>\n//     )\n// }","map":{"version":3,"names":[],"sources":["D:/PROJECTS/Project 1/frontend/src/context/ConTexT.js"],"sourcesContent":["// import { createContext, useState } from 'react'\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// const AuthContext = createContext()\r\n// export default AuthContext\r\n\r\n// export const AuthProvider = ({ children }) => {\r\n//     const [username, setusername] = useState('')\r\n//     const [password, setpassword] = useState('')\r\n//     let [authTokens, setAuthTokens] = useState(null)\r\n//     let [userauth, setuserauth] = useState(false)\r\n//     const navigate = useNavigate()\r\n\r\n\r\n//     const useronchange = (e) => {\r\n//         setusername(e.target.value)\r\n//     }\r\n\r\n//     const passwordonchange = (e) => {\r\n//         setpassword(e.target.value)\r\n//     }\r\n\r\n//     const loginuser = async (e) => {\r\n//         e.preventDefault()\r\n//         let response = await fetch('http://127.0.0.1:8000/login/', {\r\n//             method: \"POST\",\r\n//             headers: {\r\n//                 \"Content-Type\": \"application/json\"\r\n//             },\r\n\r\n//             body: JSON.stringify({ username: username, password: password })\r\n//         })\r\n//         let data = (await response.json())\r\n//         if (response.status === 200) {\r\n//             setAuthTokens(data)\r\n//             setuserauth(true)\r\n//             navigate('/')\r\n//         }\r\n//         else {\r\n//             alert('something went wrong!')\r\n//         }\r\n//     }\r\n\r\n//     let signinuser = async () =>{\r\n//         const response = await fetch ('http://127.0.0.1:8000/signup/',{\r\n//             method: \"POST\",\r\n//             headers: {\r\n//                 \"Content-Type\": \"application/json\"\r\n//             },\r\n\r\n//             body: JSON.stringify({ username: username, password: password })\r\n//         })\r\n//         let data = await response.json()\r\n//     }\r\n\r\n//     let logoutuser = () =>{\r\n//         setAuthTokens(null)\r\n//         setuserauth(false)\r\n//     }\r\n\r\n//     let contextData={\r\n//         username:username,\r\n//         password:password,\r\n//         setusername:setusername,\r\n//         setpassword:setpassword,\r\n//         useronchange:useronchange,\r\n//         passwordonchange:passwordonchange,\r\n//         authTokens:authTokens,\r\n//         userauth:userauth,\r\n\r\n//         loginuser:loginuser,\r\n//         signinuser:signinuser,\r\n//         logoutuser:logoutuser\r\n\r\n\r\n//     }\r\n\r\n//     return (\r\n//         <AuthContext.Provider value={contextData} >\r\n//             {children}\r\n//         </AuthContext.Provider>\r\n//     )\r\n// }\r\n\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}