{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJECTS\\\\Project 1\\\\frontend\\\\src\\\\pages\\\\YourPosts.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport AuthContext from '../context/ConTexT';\nimport { useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst YourPosts = () => {\n  _s();\n  const [note, setnote] = useState([]);\n  let {\n    authTokens,\n    username\n  } = useContext(AuthContext);\n  const url = `http://127.0.0.1:8000/note/${username}`;\n  const getnote = async () => {\n    const response = await fetch(url, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + String(authTokens.access)\n      }\n    });\n    let data = await response.json();\n    if (response.status === 200) {\n      setnote(data);\n    } else if (response.statusText === 'Unauthorized') {\n      logoutuser();\n    } else {\n      alert('Something went  wrong !');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"your tweeties\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(YourPosts, \"mitMUWFUq9KgoW3ytFsOflGe+B4=\");\n_c = YourPosts;\nexport default YourPosts;\nvar _c;\n$RefreshReg$(_c, \"YourPosts\");","map":{"version":3,"names":["React","AuthContext","useContext","useState","useEffect","YourPosts","note","setnote","authTokens","username","url","getnote","response","fetch","method","headers","String","access","data","json","status","statusText","logoutuser","alert"],"sources":["D:/PROJECTS/Project 1/frontend/src/pages/YourPosts.js"],"sourcesContent":["import React from 'react'\r\nimport AuthContext from '../context/ConTexT'\r\nimport { useContext, useState, useEffect } from 'react'\r\nconst YourPosts = () => {\r\n    const [note, setnote] = useState([])\r\n    let { authTokens, username } = useContext(AuthContext)\r\n    const url = `http://127.0.0.1:8000/note/${username}`\r\n\r\n    const getnote = async () => {\r\n        const response = await fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + String(authTokens.access)\r\n            }\r\n        })\r\n        let data = await response.json()\r\n        if (response.status === 200) {\r\n            setnote(data)\r\n        } else if (response.statusText === 'Unauthorized') {\r\n            logoutuser()\r\n        }\r\n        else {\r\n            alert('Something went  wrong !')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            your tweeties\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default YourPosts\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,oBAAoB;AAC5C,SAASC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAA;AACvD,MAAMC,SAAS,GAAG,MAAM;EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACpC,IAAI;IAAEK,UAAU;IAAEC;EAAS,CAAC,GAAGP,UAAU,CAACD,WAAW,CAAC;EACtD,MAAMS,GAAG,GAAI,8BAA6BD,QAAS,EAAC;EAEpD,MAAME,OAAO,GAAG,YAAY;IACxB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAG,EAAE;MAC9BI,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,SAAS,GAAGC,MAAM,CAACR,UAAU,CAACS,MAAM;MACzD;IACJ,CAAC,CAAC;IACF,IAAIC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,EAAE;IAChC,IAAIP,QAAQ,CAACQ,MAAM,KAAK,GAAG,EAAE;MACzBb,OAAO,CAACW,IAAI,CAAC;IACjB,CAAC,MAAM,IAAIN,QAAQ,CAACS,UAAU,KAAK,cAAc,EAAE;MAC/CC,UAAU,EAAE;IAChB,CAAC,MACI;MACDC,KAAK,CAAC,yBAAyB,CAAC;IACpC;EACJ,CAAC;EAED,oBACI;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAEM;AAEd,CAAC;AAAA,GA7BKlB,SAAS;AAAA,KAATA,SAAS;AA+Bf,eAAeA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}