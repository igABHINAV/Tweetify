{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJECTS\\\\Project 1\\\\frontend\\\\src\\\\context\\\\ConTexT.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport default AuthContext;\nexport const AuthProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [username, setusername] = useState('');\n  const [password, setpassword] = useState('');\n  let [authTokens, setAuthTokens] = useState(null);\n  let [userauth, setuserauth] = useState(false);\n  const navigate = useNavigate();\n  const useronchange = e => {\n    setusername(e.target.value);\n  };\n  const passwordonchange = e => {\n    setpassword(e.target.value);\n  };\n  const loginuser = async e => {\n    e.preventDefault();\n    let response = await fetch('http://127.0.0.1:8000/login/', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: username,\n        password: password\n      })\n    });\n    let data = await response.json();\n    if (response.status === 200) {\n      setAuthTokens(data);\n      console.log(data);\n      setuserauth(true);\n      navigate('/');\n    } else {\n      alert('something went wrong!');\n    }\n  };\n  let signinuser = async () => {\n    const response = await fetch('http://127.0.0.1:8000/signup/', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: username,\n        password: password\n      })\n    });\n    let data = await response.json();\n    console.log(data);\n  };\n  let logoutuser = () => {\n    setAuthTokens(null);\n    setuserauth(false);\n  };\n  let contextData = {\n    username: username,\n    password: password,\n    setusername: setusername,\n    setpassword: setpassword,\n    useronchange: useronchange,\n    passwordonchange: passwordonchange,\n    authTokens: authTokens,\n    userauth: userauth,\n    loginuser: loginuser,\n    signinuser: signinuser,\n    logoutuser: logoutuser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"5DBTBUfF0q1iSSSoS50G8aToJ/g=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useNavigate","AuthContext","AuthProvider","children","username","setusername","password","setpassword","authTokens","setAuthTokens","userauth","setuserauth","navigate","useronchange","e","target","value","passwordonchange","loginuser","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","status","console","log","alert","signinuser","logoutuser","contextData"],"sources":["D:/PROJECTS/Project 1/frontend/src/context/ConTexT.js"],"sourcesContent":["import { createContext, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst AuthContext = createContext()\r\nexport default AuthContext\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [username, setusername] = useState('')\r\n    const [password, setpassword] = useState('')\r\n    let [authTokens, setAuthTokens] = useState(null)\r\n    let [userauth, setuserauth] = useState(false)\r\n    const navigate = useNavigate()\r\n\r\n\r\n    const useronchange = (e) => {\r\n        setusername(e.target.value)\r\n    }\r\n\r\n    const passwordonchange = (e) => {\r\n        setpassword(e.target.value)\r\n    }\r\n\r\n    const loginuser = async (e) => {\r\n        e.preventDefault()\r\n        let response = await fetch('http://127.0.0.1:8000/login/', {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n\r\n            body: JSON.stringify({ username: username, password: password })\r\n        })\r\n        let data = (await response.json())\r\n        if (response.status === 200) {\r\n            setAuthTokens(data)\r\n            console.log(data)\r\n            setuserauth(true)\r\n            navigate('/')\r\n        }\r\n        else {\r\n            alert('something went wrong!')\r\n        }\r\n    }\r\n\r\n    let signinuser = async () =>{\r\n        const response = await fetch ('http://127.0.0.1:8000/signup/',{\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n\r\n            body: JSON.stringify({ username: username, password: password })\r\n        })\r\n        let data = await response.json()\r\n        console.log(data)\r\n    }\r\n\r\n    let logoutuser = () =>{\r\n        setAuthTokens(null)\r\n        setuserauth(false)\r\n    }\r\n\r\n    let contextData={\r\n        username:username,\r\n        password:password,\r\n        setusername:setusername,\r\n        setpassword:setpassword,\r\n        useronchange:useronchange,\r\n        passwordonchange:passwordonchange,\r\n        authTokens:authTokens,\r\n        userauth:userauth,\r\n\r\n        loginuser:loginuser,\r\n        signinuser:signinuser,\r\n        logoutuser:logoutuser\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={contextData} >\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}