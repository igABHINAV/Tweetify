{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJECTS\\\\Project 1\\\\frontend\\\\src\\\\pages\\\\YourPosts.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport AuthContext from '../context/ConTexT';\nimport { useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst YourPosts = () => {\n  _s();\n  const [note, setnote] = useState([]);\n  let {\n    authTokens,\n    username\n  } = useContext(AuthContext);\n  const url = `http://127.0.0.1:8000/note/${username}`;\n  useEffect(() => {\n    getnote();\n  }, []);\n  const getnote = async () => {\n    const response = await fetch(url, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + String(authTokens.access)\n      }\n    });\n    let data = await response.json();\n    if (response.status === 200) {\n      setnote(data);\n    } else {\n      alert('Something went  wrong !');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"your tweeties\", note.map(items => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"card-title\",\n                children: items.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: items.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: /*#__PURE__*/_jsxDEV(\"small\", {\n                  className: \"text-muted\",\n                  children: [\"Last updated \", items.date]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 62\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this)\n      }, void 0, false);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(YourPosts, \"CmRHOx77VcRmHfdSP9msO0CEWUU=\");\n_c = YourPosts;\nexport default YourPosts;\nvar _c;\n$RefreshReg$(_c, \"YourPosts\");","map":{"version":3,"names":["React","AuthContext","useContext","useState","useEffect","YourPosts","note","setnote","authTokens","username","url","getnote","response","fetch","method","headers","String","access","data","json","status","alert","map","items","message","date"],"sources":["D:/PROJECTS/Project 1/frontend/src/pages/YourPosts.js"],"sourcesContent":["import React from 'react'\r\nimport AuthContext from '../context/ConTexT'\r\nimport { useContext, useState, useEffect } from 'react'\r\nconst YourPosts = () => {\r\n    const [note, setnote] = useState([])\r\n    let { authTokens, username } = useContext(AuthContext)\r\n    const url = `http://127.0.0.1:8000/note/${username}`\r\n    useEffect(() => {\r\n        getnote()\r\n      }, [])\r\n    const getnote = async () => {\r\n        const response = await fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + String(authTokens.access)\r\n            }\r\n        })\r\n        let data = await response.json()\r\n        if (response.status === 200) {\r\n            setnote(data)\r\n        }\r\n        else {\r\n            alert('Something went  wrong !')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            your tweeties\r\n\r\n            {note.map((items) => {\r\n                return (\r\n                    <>\r\n\r\n                        <div className='container text-center'>\r\n                            <div className=\"card mb-3\">\r\n                                <div className=\"card-body\">\r\n                                    <h5 className=\"card-title\">{items.username}</h5>\r\n                                    <p className=\"card-text\">{items.message}</p>\r\n                                    <p className=\"card-text\"><small className=\"text-muted\">Last updated {items.date}</small></p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </>\r\n\r\n                )\r\n\r\n\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default YourPosts\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,oBAAoB;AAC5C,SAASC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAA;AAAA;AACvD,MAAMC,SAAS,GAAG,MAAM;EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACpC,IAAI;IAAEK,UAAU;IAAEC;EAAS,CAAC,GAAGP,UAAU,CAACD,WAAW,CAAC;EACtD,MAAMS,GAAG,GAAI,8BAA6BD,QAAS,EAAC;EACpDL,SAAS,CAAC,MAAM;IACZO,OAAO,EAAE;EACX,CAAC,EAAE,EAAE,CAAC;EACR,MAAMA,OAAO,GAAG,YAAY;IACxB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAG,EAAE;MAC9BI,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,SAAS,GAAGC,MAAM,CAACR,UAAU,CAACS,MAAM;MACzD;IACJ,CAAC,CAAC;IACF,IAAIC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,EAAE;IAChC,IAAIP,QAAQ,CAACQ,MAAM,KAAK,GAAG,EAAE;MACzBb,OAAO,CAACW,IAAI,CAAC;IACjB,CAAC,MACI;MACDG,KAAK,CAAC,yBAAyB,CAAC;IACpC;EACJ,CAAC;EAED,oBACI;IAAA,4BAGKf,IAAI,CAACgB,GAAG,CAAEC,KAAK,IAAK;MACjB,oBACI;QAAA,uBAEI;UAAK,SAAS,EAAC,uBAAuB;UAAA,uBAClC;YAAK,SAAS,EAAC,WAAW;YAAA,uBACtB;cAAK,SAAS,EAAC,WAAW;cAAA,wBACtB;gBAAI,SAAS,EAAC,YAAY;gBAAA,UAAEA,KAAK,CAACd;cAAQ;gBAAA;gBAAA;gBAAA;cAAA,QAAM,eAChD;gBAAG,SAAS,EAAC,WAAW;gBAAA,UAAEc,KAAK,CAACC;cAAO;gBAAA;gBAAA;gBAAA;cAAA,QAAK,eAC5C;gBAAG,SAAS,EAAC,WAAW;gBAAA,uBAAC;kBAAO,SAAS,EAAC,YAAY;kBAAA,4BAAeD,KAAK,CAACE,IAAI;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA;cAAS;gBAAA;gBAAA;gBAAA;cAAA,QAAI;YAAA;cAAA;cAAA;cAAA;YAAA;UAC1F;YAAA;YAAA;YAAA;UAAA;QACJ;UAAA;UAAA;UAAA;QAAA;MACJ,iBAEP;IAKX,CAAC,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAEd,CAAC;AAAA,GAlDKpB,SAAS;AAAA,KAATA,SAAS;AAoDf,eAAeA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}